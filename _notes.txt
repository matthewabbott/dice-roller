TODOs:
- have color change system message show TO and FROM colors
- fix anonymous user registry, or at least codify current behavior as intentional
- initialized user color sometimes is different from ui listed color (might be a session persistence thing?)


Minor snag, physics body sleeping issue
- Dice would freeze when they come to a full stop
- Cannon.js behavior that puts them to 'sleep' and requires they explicitly be 'woken up'
- Also at the end of a throw, to show the die face, we'd rotate the die to show the value...
  - except it'd restore the vectors from the start of the throw, flinging the die again.

Major snag, username tracking synchronization bug:
- Data structures `activeUsernames`, `sessionToUsername`, and `usernameToSession` were getting out of sync
- Caused "ghost" usernames: registered, but orphaned from disconnected sessions
- Root cause: incomplete cleanup during username changes and WebSocket disconnects
- Fixed by adding removeUsernameSafely() helper to enforce atomic updates
- Also added orphaned username detection for cleanup on improper disconnections
- Also was seeing an error in onDisconnect when WebSocket context was unavaiable. Added fallback cleanup.
- TODO: invariant based setup of a contract between `activeUsernames`, `sessionToUsername`, `usernameToSession`. (Or just better structuring)

Major snag,
- HOW do you kill sessions after a browser tab closes? After a browser window closes?

Minor snag,
- Add error handling, but useMutation hook's onError callback never gets reached
- Seems like the browser was holding back the request in a `Stalled` state if the server was down
- Apollo never interpreted that as an error, so we'd just be locked 
- Solution: manually implement timeouts

Major snag, http requests to websocket, fixed by e48bc33:
- Needed to change server.ts to explicitly define a websocket server to handle requests against `ws://localhost:4000/dice/graphql`
- Apollo documentation at https://www.apollographql.com/docs/apollo-server/data/subscriptions was out of date
- Documentation shows `import { useServer } from 'graphql-ws/lib/use/ws';`
- Correct import in graphql v6 is `import { useServer } from 'graphql-ws/use/ws';` (per https://the-guild.dev/graphql/ws/recipes)
- Apollo has the latest graphql as a dependency. So doc examples just don't actually work.
- Imagine having to go check the graphql documentation. This was actually me. I had to. All the king's AIs and all the king's client documentation couldn't put my imports back together again.